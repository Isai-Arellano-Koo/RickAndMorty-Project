{"ast":null,"code":"const validation = (userData, errors, setErrors) => {\n  // ! VALIDACION EMAIL\n\n  if (!userData.email) {\n    setErrors({\n      ...errors,\n      email: 'Campo Obligatorio'\n    });\n  } else if (userData.email.lenght > 35) {\n    setErrors({\n      ...errors,\n      email: 'No puede superar los 35 caracteres'\n    });\n  } else if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userData.email)) {\n    setErrors({\n      ...errors,\n      email: ''\n    });\n  } else {\n    setErrors({\n      ...errors,\n      email: 'Email invalido'\n    });\n  }\n\n  // ! VALIDACION PASSWORD\n};\n\nexport default validation;\n\n// const validationEmail2 = (userData, errors, setErrors) => {\n//     if (userData.email === '') {\n//       setErrors({...errors, email: 'Campo Obligatorio'});\n//     } else if (userData.email.length > 35) {\n//       setErrors({...errors, email: 'No puede superar los 35 caracteres'});\n//     } else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userData.email)) {\n//       setErrors({...errors, email: 'Email invalido'});\n//     } else {\n//       setErrors({...errors, email: ''});\n//     }\n//   }","map":{"version":3,"names":["validation","userData","errors","setErrors","email","lenght","test"],"sources":["/Users/macuser/Desktop/RickAndMortyApp/rick_and_morty/src/components/Form/validation.js"],"sourcesContent":["const validation = (userData, errors, setErrors) => {\n\n// ! VALIDACION EMAIL\n\n    if(!userData.email) {\n        setErrors({...errors, email: 'Campo Obligatorio'});\n    } \n    else if(userData.email.lenght > 35) {\n        setErrors({...errors, email: 'No puede superar los 35 caracteres'})\n    } \n     else if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userData.email)) {\n        setErrors({...errors, email: ''})\n    } else { \n        setErrors({...errors, email: 'Email invalido'})\n    }\n\n    // ! VALIDACION PASSWORD\n}\n\nexport default validation;\n\n// const validationEmail2 = (userData, errors, setErrors) => {\n//     if (userData.email === '') {\n//       setErrors({...errors, email: 'Campo Obligatorio'});\n//     } else if (userData.email.length > 35) {\n//       setErrors({...errors, email: 'No puede superar los 35 caracteres'});\n//     } else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userData.email)) {\n//       setErrors({...errors, email: 'Email invalido'});\n//     } else {\n//       setErrors({...errors, email: ''});\n//     }\n//   }\n"],"mappings":"AAAA,MAAMA,UAAU,GAAGA,CAACC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,KAAK;EAEpD;;EAEI,IAAG,CAACF,QAAQ,CAACG,KAAK,EAAE;IAChBD,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAEE,KAAK,EAAE;IAAmB,CAAC,CAAC;EACtD,CAAC,MACI,IAAGH,QAAQ,CAACG,KAAK,CAACC,MAAM,GAAG,EAAE,EAAE;IAChCF,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAEE,KAAK,EAAE;IAAoC,CAAC,CAAC;EACvE,CAAC,MACK,IAAI,+CAA+C,CAACE,IAAI,CAACL,QAAQ,CAACG,KAAK,CAAC,EAAE;IAC5ED,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAEE,KAAK,EAAE;IAAE,CAAC,CAAC;EACrC,CAAC,MAAM;IACHD,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAEE,KAAK,EAAE;IAAgB,CAAC,CAAC;EACnD;;EAEA;AACJ,CAAC;;AAED,eAAeJ,UAAU;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}