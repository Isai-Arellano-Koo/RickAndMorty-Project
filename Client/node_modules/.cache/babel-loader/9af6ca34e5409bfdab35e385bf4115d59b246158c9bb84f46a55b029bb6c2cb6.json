{"ast":null,"code":"// const validationEmail = (userData, errors, setErrors) => {\n\n//     if(userData.email == false) {\n//         setErrors({...errors, email: 'Campo Obligatorio'});\n//     } else {\n//         setErrors({...errors, email: ''})\n//     }\n//     if(userData.email.length > 35) {\n//         setErrors({...errors, email: 'No puede superar los 35 caracteres'})\n//     } else {\n//         setErrors({...errors, email: ''})\n//     }\n//     if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userData.email)) {\n//         setErrors({...errors, email: ''})\n//     } else { \n//         setErrors({...errors, email: 'Email invalido'})\n//     }\n\n// }\n\n// export default validationEmail;\n\nconst validationEmail = (userData, errors, setErrors) => {\n  if (userData.email === '') {\n    setErrors({\n      ...errors,\n      email: 'Campo Obligatorio'\n    });\n  } else if (userData.email.length > 35) {\n    setErrors({\n      ...errors,\n      email: 'No puede superar los 35 caracteres'\n    });\n  } else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userData.email)) {\n    setErrors({\n      ...errors,\n      email: 'Email invalido'\n    });\n  } else {\n    setErrors({\n      ...errors,\n      email: ''\n    });\n  }\n};\nexport default validationEmail;","map":{"version":3,"names":["validationEmail","userData","errors","setErrors","email","length","test"],"sources":["/Users/macuser/Desktop/RickAndMortyApp/rick_and_morty/src/components/Form/validation.js"],"sourcesContent":["// const validationEmail = (userData, errors, setErrors) => {\n\n//     if(userData.email == false) {\n//         setErrors({...errors, email: 'Campo Obligatorio'});\n//     } else {\n//         setErrors({...errors, email: ''})\n//     }\n//     if(userData.email.length > 35) {\n//         setErrors({...errors, email: 'No puede superar los 35 caracteres'})\n//     } else {\n//         setErrors({...errors, email: ''})\n//     }\n//     if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userData.email)) {\n//         setErrors({...errors, email: ''})\n//     } else { \n//         setErrors({...errors, email: 'Email invalido'})\n//     }\n    \n// }\n\n// export default validationEmail;\n\nconst validationEmail = (userData, errors, setErrors) => {\n    if (userData.email === '') {\n      setErrors({...errors, email: 'Campo Obligatorio'});\n    } else if (userData.email.length > 35) {\n      setErrors({...errors, email: 'No puede superar los 35 caracteres'});\n    } else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userData.email)) {\n      setErrors({...errors, email: 'Email invalido'});\n    } else {\n      setErrors({...errors, email: ''});\n    }\n  }\n  \n  export default validationEmail;"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,MAAMA,eAAe,GAAGA,CAACC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,KAAK;EACrD,IAAIF,QAAQ,CAACG,KAAK,KAAK,EAAE,EAAE;IACzBD,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAEE,KAAK,EAAE;IAAmB,CAAC,CAAC;EACpD,CAAC,MAAM,IAAIH,QAAQ,CAACG,KAAK,CAACC,MAAM,GAAG,EAAE,EAAE;IACrCF,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAEE,KAAK,EAAE;IAAoC,CAAC,CAAC;EACrE,CAAC,MAAM,IAAI,CAAC,+CAA+C,CAACE,IAAI,CAACL,QAAQ,CAACG,KAAK,CAAC,EAAE;IAChFD,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAEE,KAAK,EAAE;IAAgB,CAAC,CAAC;EACjD,CAAC,MAAM;IACLD,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAEE,KAAK,EAAE;IAAE,CAAC,CAAC;EACnC;AACF,CAAC;AAED,eAAeJ,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}